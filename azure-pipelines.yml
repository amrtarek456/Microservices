trigger:
- main

variables:
  repoPath: 'azuredevops-431108/dockerregistry/microservice'
  imageName: 'me-central2-docker.pkg.dev/azuredevops-431108/dockerregistry/microservice'

stages:

- stage: Docker
  dependsOn: []
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  displayName: 'Docker Stage'
  jobs:
  - job: Build_Push_Docker_Image
    displayName: 'Build and Push Docker Image'
    pool:
      name: 'oci-docker'
      demands:
        - agent.name -equals azure-agent
    steps:
    - task: Docker@2
      displayName: 'Build Docker Image'
      inputs:
        command: build
        repository: '$(repoPath)'
        dockerfile: Dockerfile
        containerRegistry: 'gcr'
        arguments: '--no-cache'
        tags: |
          $(Build.BuildId)
    - task: Docker@2
      displayName: 'Push Docker Image'
      inputs:
        command: push
        repository: '$(repoPath)'
        containerRegistry: 'gcr'
        tags: |
          $(Build.BuildId)

- stage: Deploy
  dependsOn: Docker
  condition: succeeded()
  displayName: 'Deploy Stage'
  jobs:
  - job: Apply_Manifests
    displayName: 'kubectl apply'
    pool:
      name: 'oci-docker'
      demands:
        - agent.name -equals gke-bastion
    steps:
    - checkout: self
    - task: KubernetesManifest@1
      displayName: 'Deploy to Kubernetes'
      inputs:
        action: deploy
        kubernetesServiceConnection: 'gke'
        namespace: 'microservice'
        manifests: |
          k8s/namespace.yaml
          k8s/deployment.yaml
          k8s/service.yaml
        containers: |
          $(imageName):$(Build.BuildId)
        rolloutStatusTimeout: '150'
